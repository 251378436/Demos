// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.11.1
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace vehicle.sensor.massage.replay
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("avrogen", "1.11.1")]
	public partial class Customer : global::Avro.Specific.ISpecificRecord
	{
		public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse(@"{""type"":""record"",""name"":""Customer"",""namespace"":""vehicle.sensor.massage.replay"",""fields"":[{""name"":""customerI_id"",""type"":""string""},{""name"":""description"",""type"":""string""},{""name"":""customer_type"",""type"":{""type"":""enum"",""name"":""CustomerType"",""doc"":""Enumerates the customer types."",""namespace"":""vehicle.sensor.massage.replay"",""symbols"":[""Standard"",""Premium"",""Expired""],""default"":""Standard""}}]}");
		private string _customerI_id;
		private string _description;
		private vehicle.sensor.massage.replay.CustomerType _customer_type = vehicle.sensor.massage.replay.CustomerType.Standard;
		public virtual global::Avro.Schema Schema
		{
			get
			{
				return Customer._SCHEMA;
			}
		}
		public string customerI_id
		{
			get
			{
				return this._customerI_id;
			}
			set
			{
				this._customerI_id = value;
			}
		}
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				this._description = value;
			}
		}
		public vehicle.sensor.massage.replay.CustomerType customer_type
		{
			get
			{
				return this._customer_type;
			}
			set
			{
				this._customer_type = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.customerI_id;
			case 1: return this.description;
			case 2: return this.customer_type;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.customerI_id = (System.String)fieldValue; break;
			case 1: this.description = (System.String)fieldValue; break;
			case 2: this.customer_type = (vehicle.sensor.massage.replay.CustomerType)fieldValue; break;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
